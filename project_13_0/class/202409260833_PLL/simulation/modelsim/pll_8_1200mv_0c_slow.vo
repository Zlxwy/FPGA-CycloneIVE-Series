// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "09/26/2024 09:36:37"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module pll (
	pin_name2,
	pin_name1,
	pin_name3);
output 	pin_name2;
input 	pin_name1;
output 	pin_name3;

// Design Ports Information
// pin_name2	=>  Location: PIN_B5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// pin_name3	=>  Location: PIN_R4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// pin_name1	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("pll_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \pin_name1~input_o ;
wire \inst1|altpll_component|auto_generated|wire_pll1_fbout ;
wire \inst1|altpll_component|auto_generated|wire_pll1_clk[1]~clkctrl_outclk ;
wire \inst1|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_e_pin_name3_outclk ;
wire [4:0] \inst1|altpll_component|auto_generated|wire_pll1_clk ;

wire [4:0] \inst1|altpll_component|auto_generated|pll1_CLK_bus ;

assign \inst1|altpll_component|auto_generated|wire_pll1_clk [0] = \inst1|altpll_component|auto_generated|pll1_CLK_bus [0];
assign \inst1|altpll_component|auto_generated|wire_pll1_clk [1] = \inst1|altpll_component|auto_generated|pll1_CLK_bus [1];
assign \inst1|altpll_component|auto_generated|wire_pll1_clk [2] = \inst1|altpll_component|auto_generated|pll1_CLK_bus [2];
assign \inst1|altpll_component|auto_generated|wire_pll1_clk [3] = \inst1|altpll_component|auto_generated|pll1_CLK_bus [3];
assign \inst1|altpll_component|auto_generated|wire_pll1_clk [4] = \inst1|altpll_component|auto_generated|pll1_CLK_bus [4];

// Location: IOOBUF_X5_Y24_N9
cycloneive_io_obuf \pin_name2~output (
	.i(\inst1|altpll_component|auto_generated|wire_pll1_clk[1]~clkctrl_outclk ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(pin_name2),
	.obar());
// synopsys translate_off
defparam \pin_name2~output .bus_hold = "false";
defparam \pin_name2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneive_io_obuf \pin_name3~output (
	.i(\inst1|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_e_pin_name3_outclk ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(pin_name3),
	.obar());
// synopsys translate_off
defparam \pin_name3~output .bus_hold = "false";
defparam \pin_name3~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \pin_name1~input (
	.i(pin_name1),
	.ibar(gnd),
	.o(\pin_name1~input_o ));
// synopsys translate_off
defparam \pin_name1~input .bus_hold = "false";
defparam \pin_name1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: PLL_1
cycloneive_pll \inst1|altpll_component|auto_generated|pll1 (
	.areset(gnd),
	.pfdena(vcc),
	.fbin(\inst1|altpll_component|auto_generated|wire_pll1_fbout ),
	.phaseupdown(gnd),
	.phasestep(gnd),
	.scandata(gnd),
	.scanclk(gnd),
	.scanclkena(vcc),
	.configupdate(gnd),
	.clkswitch(gnd),
	.inclk({gnd,\pin_name1~input_o }),
	.phasecounterselect(3'b000),
	.phasedone(),
	.scandataout(),
	.scandone(),
	.activeclock(),
	.locked(),
	.vcooverrange(),
	.vcounderrange(),
	.fbout(\inst1|altpll_component|auto_generated|wire_pll1_fbout ),
	.clk(\inst1|altpll_component|auto_generated|pll1_CLK_bus ),
	.clkbad());
// synopsys translate_off
defparam \inst1|altpll_component|auto_generated|pll1 .auto_settings = "false";
defparam \inst1|altpll_component|auto_generated|pll1 .bandwidth_type = "medium";
defparam \inst1|altpll_component|auto_generated|pll1 .c0_high = 12;
defparam \inst1|altpll_component|auto_generated|pll1 .c0_initial = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .c0_low = 12;
defparam \inst1|altpll_component|auto_generated|pll1 .c0_mode = "even";
defparam \inst1|altpll_component|auto_generated|pll1 .c0_ph = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c1_high = 30;
defparam \inst1|altpll_component|auto_generated|pll1 .c1_initial = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .c1_low = 30;
defparam \inst1|altpll_component|auto_generated|pll1 .c1_mode = "even";
defparam \inst1|altpll_component|auto_generated|pll1 .c1_ph = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c1_use_casc_in = "off";
defparam \inst1|altpll_component|auto_generated|pll1 .c2_high = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c2_initial = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c2_low = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c2_mode = "bypass";
defparam \inst1|altpll_component|auto_generated|pll1 .c2_ph = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c2_use_casc_in = "off";
defparam \inst1|altpll_component|auto_generated|pll1 .c3_high = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c3_initial = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c3_low = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c3_mode = "bypass";
defparam \inst1|altpll_component|auto_generated|pll1 .c3_ph = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c3_use_casc_in = "off";
defparam \inst1|altpll_component|auto_generated|pll1 .c4_high = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c4_initial = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c4_low = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c4_mode = "bypass";
defparam \inst1|altpll_component|auto_generated|pll1 .c4_ph = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .c4_use_casc_in = "off";
defparam \inst1|altpll_component|auto_generated|pll1 .charge_pump_current_bits = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .clk0_counter = "c0";
defparam \inst1|altpll_component|auto_generated|pll1 .clk0_divide_by = 2;
defparam \inst1|altpll_component|auto_generated|pll1 .clk0_duty_cycle = 50;
defparam \inst1|altpll_component|auto_generated|pll1 .clk0_multiply_by = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .clk0_phase_shift = "0";
defparam \inst1|altpll_component|auto_generated|pll1 .clk1_counter = "c1";
defparam \inst1|altpll_component|auto_generated|pll1 .clk1_divide_by = 5;
defparam \inst1|altpll_component|auto_generated|pll1 .clk1_duty_cycle = 50;
defparam \inst1|altpll_component|auto_generated|pll1 .clk1_multiply_by = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .clk1_phase_shift = "0";
defparam \inst1|altpll_component|auto_generated|pll1 .clk2_counter = "unused";
defparam \inst1|altpll_component|auto_generated|pll1 .clk2_divide_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .clk2_duty_cycle = 50;
defparam \inst1|altpll_component|auto_generated|pll1 .clk2_multiply_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .clk2_phase_shift = "0";
defparam \inst1|altpll_component|auto_generated|pll1 .clk3_counter = "unused";
defparam \inst1|altpll_component|auto_generated|pll1 .clk3_divide_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .clk3_duty_cycle = 50;
defparam \inst1|altpll_component|auto_generated|pll1 .clk3_multiply_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .clk3_phase_shift = "0";
defparam \inst1|altpll_component|auto_generated|pll1 .clk4_counter = "unused";
defparam \inst1|altpll_component|auto_generated|pll1 .clk4_divide_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .clk4_duty_cycle = 50;
defparam \inst1|altpll_component|auto_generated|pll1 .clk4_multiply_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .clk4_phase_shift = "0";
defparam \inst1|altpll_component|auto_generated|pll1 .compensate_clock = "clock0";
defparam \inst1|altpll_component|auto_generated|pll1 .inclk0_input_frequency = 20000;
defparam \inst1|altpll_component|auto_generated|pll1 .inclk1_input_frequency = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .loop_filter_c_bits = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .loop_filter_r_bits = 27;
defparam \inst1|altpll_component|auto_generated|pll1 .m = 12;
defparam \inst1|altpll_component|auto_generated|pll1 .m_initial = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .m_ph = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .n = 1;
defparam \inst1|altpll_component|auto_generated|pll1 .operation_mode = "normal";
defparam \inst1|altpll_component|auto_generated|pll1 .pfd_max = 200000;
defparam \inst1|altpll_component|auto_generated|pll1 .pfd_min = 3076;
defparam \inst1|altpll_component|auto_generated|pll1 .pll_compensation_delay = 5891;
defparam \inst1|altpll_component|auto_generated|pll1 .self_reset_on_loss_lock = "off";
defparam \inst1|altpll_component|auto_generated|pll1 .simulation_type = "timing";
defparam \inst1|altpll_component|auto_generated|pll1 .switch_over_type = "auto";
defparam \inst1|altpll_component|auto_generated|pll1 .vco_center = 1538;
defparam \inst1|altpll_component|auto_generated|pll1 .vco_divide_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .vco_frequency_control = "auto";
defparam \inst1|altpll_component|auto_generated|pll1 .vco_max = 3333;
defparam \inst1|altpll_component|auto_generated|pll1 .vco_min = 1538;
defparam \inst1|altpll_component|auto_generated|pll1 .vco_multiply_by = 0;
defparam \inst1|altpll_component|auto_generated|pll1 .vco_phase_shift_step = 208;
defparam \inst1|altpll_component|auto_generated|pll1 .vco_post_scale = 2;
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \inst1|altpll_component|auto_generated|wire_pll1_clk[1]~clkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\inst1|altpll_component|auto_generated|wire_pll1_clk [1]}),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\inst1|altpll_component|auto_generated|wire_pll1_clk[1]~clkctrl_outclk ));
// synopsys translate_off
defparam \inst1|altpll_component|auto_generated|wire_pll1_clk[1]~clkctrl .clock_type = "global clock";
defparam \inst1|altpll_component|auto_generated|wire_pll1_clk[1]~clkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: CLKCTRL_PLL1E0
cycloneive_clkctrl \inst1|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_e_pin_name3 (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\inst1|altpll_component|auto_generated|wire_pll1_clk [0]}),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\inst1|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_e_pin_name3_outclk ));
// synopsys translate_off
defparam \inst1|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_e_pin_name3 .clock_type = "external clock output";
defparam \inst1|altpll_component|auto_generated|wire_pll1_clk[0]~clkctrl_e_pin_name3 .ena_register_mode = "double register";
// synopsys translate_on

endmodule
