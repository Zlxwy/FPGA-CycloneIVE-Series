|top_caseg_time_disp_parallel
clk => clk.IN3
rst => rst.IN3
sel[0] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[1] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[2] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[3] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[4] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[5] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[6] <= bit_to_caseg:bit_to_caseg_inst.sel
sel[7] <= bit_to_caseg:bit_to_caseg_inst.sel
seg[0] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[1] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[2] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[3] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[4] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[5] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[6] <= bit_to_caseg:bit_to_caseg_inst.seg
seg[7] <= bit_to_caseg:bit_to_caseg_inst.seg


|top_caseg_time_disp_parallel|time_cnt:time_cnt_inst
clk => hour[0]~reg0.CLK
clk => hour[1]~reg0.CLK
clk => hour[2]~reg0.CLK
clk => hour[3]~reg0.CLK
clk => hour[4]~reg0.CLK
clk => hour[5]~reg0.CLK
clk => minute[0]~reg0.CLK
clk => minute[1]~reg0.CLK
clk => minute[2]~reg0.CLK
clk => minute[3]~reg0.CLK
clk => minute[4]~reg0.CLK
clk => minute[5]~reg0.CLK
clk => second[0]~reg0.CLK
clk => second[1]~reg0.CLK
clk => second[2]~reg0.CLK
clk => second[3]~reg0.CLK
clk => second[4]~reg0.CLK
clk => second[5]~reg0.CLK
clk => cnt_1s[0].CLK
clk => cnt_1s[1].CLK
clk => cnt_1s[2].CLK
clk => cnt_1s[3].CLK
clk => cnt_1s[4].CLK
clk => cnt_1s[5].CLK
clk => cnt_1s[6].CLK
clk => cnt_1s[7].CLK
clk => cnt_1s[8].CLK
clk => cnt_1s[9].CLK
clk => cnt_1s[10].CLK
clk => cnt_1s[11].CLK
clk => cnt_1s[12].CLK
clk => cnt_1s[13].CLK
clk => cnt_1s[14].CLK
clk => cnt_1s[15].CLK
clk => cnt_1s[16].CLK
clk => cnt_1s[17].CLK
clk => cnt_1s[18].CLK
clk => cnt_1s[19].CLK
clk => cnt_1s[20].CLK
clk => cnt_1s[21].CLK
clk => cnt_1s[22].CLK
clk => cnt_1s[23].CLK
clk => cnt_1s[24].CLK
clk => cnt_1s[25].CLK
rst => cnt_1s[0].ACLR
rst => cnt_1s[1].ACLR
rst => cnt_1s[2].ACLR
rst => cnt_1s[3].ACLR
rst => cnt_1s[4].ACLR
rst => cnt_1s[5].ACLR
rst => cnt_1s[6].ACLR
rst => cnt_1s[7].ACLR
rst => cnt_1s[8].ACLR
rst => cnt_1s[9].ACLR
rst => cnt_1s[10].ACLR
rst => cnt_1s[11].ACLR
rst => cnt_1s[12].ACLR
rst => cnt_1s[13].ACLR
rst => cnt_1s[14].ACLR
rst => cnt_1s[15].ACLR
rst => cnt_1s[16].ACLR
rst => cnt_1s[17].ACLR
rst => cnt_1s[18].ACLR
rst => cnt_1s[19].ACLR
rst => cnt_1s[20].ACLR
rst => cnt_1s[21].ACLR
rst => cnt_1s[22].ACLR
rst => cnt_1s[23].ACLR
rst => cnt_1s[24].ACLR
rst => cnt_1s[25].ACLR
rst => hour[0]~reg0.ACLR
rst => hour[1]~reg0.ACLR
rst => hour[2]~reg0.ACLR
rst => hour[3]~reg0.ACLR
rst => hour[4]~reg0.ACLR
rst => hour[5]~reg0.ACLR
rst => minute[0]~reg0.ACLR
rst => minute[1]~reg0.ACLR
rst => minute[2]~reg0.ACLR
rst => minute[3]~reg0.ACLR
rst => minute[4]~reg0.ACLR
rst => minute[5]~reg0.ACLR
rst => second[0]~reg0.ACLR
rst => second[1]~reg0.ACLR
rst => second[2]~reg0.ACLR
rst => second[3]~reg0.ACLR
rst => second[4]~reg0.ACLR
rst => second[5]~reg0.ACLR
hour[0] <= hour[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[1] <= hour[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[2] <= hour[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[3] <= hour[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[4] <= hour[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[5] <= hour[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[0] <= minute[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[1] <= minute[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[2] <= minute[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[3] <= minute[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[4] <= minute[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[5] <= minute[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[0] <= second[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[1] <= second[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[2] <= second[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[3] <= second[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[4] <= second[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[5] <= second[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_caseg_time_disp_parallel|time_to_bit:time_to_bit_inst
clk => bit_0[0]~reg0.CLK
clk => bit_0[1]~reg0.CLK
clk => bit_0[2]~reg0.CLK
clk => bit_0[3]~reg0.CLK
clk => bit_1[0]~reg0.CLK
clk => bit_1[1]~reg0.CLK
clk => bit_1[2]~reg0.CLK
clk => bit_1[3]~reg0.CLK
clk => bit_2[0]~reg0.CLK
clk => bit_2[1]~reg0.CLK
clk => bit_2[2]~reg0.CLK
clk => bit_2[3]~reg0.CLK
clk => bit_3[0]~reg0.CLK
clk => bit_3[1]~reg0.CLK
clk => bit_3[2]~reg0.CLK
clk => bit_3[3]~reg0.CLK
clk => bit_4[0]~reg0.CLK
clk => bit_4[1]~reg0.CLK
clk => bit_4[2]~reg0.CLK
clk => bit_4[3]~reg0.CLK
clk => bit_5[0]~reg0.CLK
clk => bit_5[1]~reg0.CLK
clk => bit_5[2]~reg0.CLK
clk => bit_5[3]~reg0.CLK
clk => bit_6[0]~reg0.CLK
clk => bit_6[1]~reg0.CLK
clk => bit_6[2]~reg0.CLK
clk => bit_6[3]~reg0.CLK
clk => bit_7[0]~reg0.CLK
clk => bit_7[1]~reg0.CLK
clk => bit_7[2]~reg0.CLK
clk => bit_7[3]~reg0.CLK
clk => second_shift[0].CLK
clk => second_shift[1].CLK
clk => second_shift[2].CLK
clk => second_shift[3].CLK
clk => second_shift[4].CLK
clk => second_shift[5].CLK
clk => second_shift[6].CLK
clk => second_shift[7].CLK
clk => second_shift[8].CLK
clk => second_shift[9].CLK
clk => second_shift[10].CLK
clk => second_shift[11].CLK
clk => second_shift[12].CLK
clk => second_shift[13].CLK
clk => minute_shift[0].CLK
clk => minute_shift[1].CLK
clk => minute_shift[2].CLK
clk => minute_shift[3].CLK
clk => minute_shift[4].CLK
clk => minute_shift[5].CLK
clk => minute_shift[6].CLK
clk => minute_shift[7].CLK
clk => minute_shift[8].CLK
clk => minute_shift[9].CLK
clk => minute_shift[10].CLK
clk => minute_shift[11].CLK
clk => minute_shift[12].CLK
clk => minute_shift[13].CLK
clk => hour_shift[0].CLK
clk => hour_shift[1].CLK
clk => hour_shift[2].CLK
clk => hour_shift[3].CLK
clk => hour_shift[4].CLK
clk => hour_shift[5].CLK
clk => hour_shift[6].CLK
clk => hour_shift[7].CLK
clk => hour_shift[8].CLK
clk => hour_shift[9].CLK
clk => hour_shift[10].CLK
clk => hour_shift[11].CLK
clk => hour_shift[12].CLK
clk => hour_shift[13].CLK
clk => cnt_shift[0].CLK
clk => cnt_shift[1].CLK
clk => cnt_shift[2].CLK
clk => shift_signal.CLK
rst => bit_0[0]~reg0.ACLR
rst => bit_0[1]~reg0.PRESET
rst => bit_0[2]~reg0.ACLR
rst => bit_0[3]~reg0.PRESET
rst => bit_1[0]~reg0.ACLR
rst => bit_1[1]~reg0.PRESET
rst => bit_1[2]~reg0.ACLR
rst => bit_1[3]~reg0.PRESET
rst => bit_2[0]~reg0.ACLR
rst => bit_2[1]~reg0.PRESET
rst => bit_2[2]~reg0.ACLR
rst => bit_2[3]~reg0.PRESET
rst => bit_3[0]~reg0.ACLR
rst => bit_3[1]~reg0.PRESET
rst => bit_3[2]~reg0.ACLR
rst => bit_3[3]~reg0.PRESET
rst => bit_4[0]~reg0.ACLR
rst => bit_4[1]~reg0.PRESET
rst => bit_4[2]~reg0.ACLR
rst => bit_4[3]~reg0.PRESET
rst => bit_5[0]~reg0.ACLR
rst => bit_5[1]~reg0.PRESET
rst => bit_5[2]~reg0.ACLR
rst => bit_5[3]~reg0.PRESET
rst => bit_6[0]~reg0.ACLR
rst => bit_6[1]~reg0.PRESET
rst => bit_6[2]~reg0.ACLR
rst => bit_6[3]~reg0.PRESET
rst => bit_7[0]~reg0.ACLR
rst => bit_7[1]~reg0.PRESET
rst => bit_7[2]~reg0.ACLR
rst => bit_7[3]~reg0.PRESET
rst => shift_signal.ACLR
rst => cnt_shift[0].ACLR
rst => cnt_shift[1].ACLR
rst => cnt_shift[2].ACLR
rst => hour_shift[0].ACLR
rst => hour_shift[1].ACLR
rst => hour_shift[2].ACLR
rst => hour_shift[3].ACLR
rst => hour_shift[4].ACLR
rst => hour_shift[5].ACLR
rst => hour_shift[6].ACLR
rst => hour_shift[7].ACLR
rst => hour_shift[8].ACLR
rst => hour_shift[9].ACLR
rst => hour_shift[10].ACLR
rst => hour_shift[11].ACLR
rst => hour_shift[12].ACLR
rst => hour_shift[13].ACLR
rst => minute_shift[0].ACLR
rst => minute_shift[1].ACLR
rst => minute_shift[2].ACLR
rst => minute_shift[3].ACLR
rst => minute_shift[4].ACLR
rst => minute_shift[5].ACLR
rst => minute_shift[6].ACLR
rst => minute_shift[7].ACLR
rst => minute_shift[8].ACLR
rst => minute_shift[9].ACLR
rst => minute_shift[10].ACLR
rst => minute_shift[11].ACLR
rst => minute_shift[12].ACLR
rst => minute_shift[13].ACLR
rst => second_shift[0].ACLR
rst => second_shift[1].ACLR
rst => second_shift[2].ACLR
rst => second_shift[3].ACLR
rst => second_shift[4].ACLR
rst => second_shift[5].ACLR
rst => second_shift[6].ACLR
rst => second_shift[7].ACLR
rst => second_shift[8].ACLR
rst => second_shift[9].ACLR
rst => second_shift[10].ACLR
rst => second_shift[11].ACLR
rst => second_shift[12].ACLR
rst => second_shift[13].ACLR
hour[0] => hour_shift.DATAB
hour[1] => hour_shift.DATAB
hour[2] => hour_shift.DATAB
hour[3] => hour_shift.DATAB
hour[4] => hour_shift.DATAB
hour[5] => hour_shift.DATAB
minute[0] => minute_shift.DATAB
minute[1] => minute_shift.DATAB
minute[2] => minute_shift.DATAB
minute[3] => minute_shift.DATAB
minute[4] => minute_shift.DATAB
minute[5] => minute_shift.DATAB
second[0] => second_shift.DATAB
second[1] => second_shift.DATAB
second[2] => second_shift.DATAB
second[3] => second_shift.DATAB
second[4] => second_shift.DATAB
second[5] => second_shift.DATAB
bit_7[0] <= bit_7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_7[1] <= bit_7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_7[2] <= bit_7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_7[3] <= bit_7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[0] <= bit_6[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[1] <= bit_6[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[2] <= bit_6[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[3] <= bit_6[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[0] <= bit_5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[1] <= bit_5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[2] <= bit_5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[3] <= bit_5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[0] <= bit_4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[1] <= bit_4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[2] <= bit_4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[3] <= bit_4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[0] <= bit_3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[1] <= bit_3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[2] <= bit_3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[3] <= bit_3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[0] <= bit_2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[1] <= bit_2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[2] <= bit_2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[3] <= bit_2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[0] <= bit_1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[1] <= bit_1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[2] <= bit_1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[3] <= bit_1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[0] <= bit_0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[1] <= bit_0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[2] <= bit_0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[3] <= bit_0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_caseg_time_disp_parallel|bit_to_caseg:bit_to_caseg_inst
clk => seg[0]~reg0.CLK
clk => seg[1]~reg0.CLK
clk => seg[2]~reg0.CLK
clk => seg[3]~reg0.CLK
clk => seg[4]~reg0.CLK
clk => seg[5]~reg0.CLK
clk => seg[6]~reg0.CLK
clk => seg[7]~reg0.CLK
clk => sel[0]~reg0.CLK
clk => sel[1]~reg0.CLK
clk => sel[2]~reg0.CLK
clk => sel[3]~reg0.CLK
clk => sel[4]~reg0.CLK
clk => sel[5]~reg0.CLK
clk => sel[6]~reg0.CLK
clk => sel[7]~reg0.CLK
clk => seg_disp[0].CLK
clk => seg_disp[1].CLK
clk => seg_disp[2].CLK
clk => seg_disp[3].CLK
clk => sel_disp[0].CLK
clk => sel_disp[1].CLK
clk => sel_disp[2].CLK
clk => sel_disp[3].CLK
clk => sel_disp[4].CLK
clk => sel_disp[5].CLK
clk => sel_disp[6].CLK
clk => sel_disp[7].CLK
clk => cnt_bit[0].CLK
clk => cnt_bit[1].CLK
clk => cnt_bit[2].CLK
clk => signal_1ms.CLK
clk => cnt_1ms[0].CLK
clk => cnt_1ms[1].CLK
clk => cnt_1ms[2].CLK
clk => cnt_1ms[3].CLK
clk => cnt_1ms[4].CLK
clk => cnt_1ms[5].CLK
clk => cnt_1ms[6].CLK
clk => cnt_1ms[7].CLK
clk => cnt_1ms[8].CLK
clk => cnt_1ms[9].CLK
clk => cnt_1ms[10].CLK
clk => cnt_1ms[11].CLK
clk => cnt_1ms[12].CLK
clk => cnt_1ms[13].CLK
clk => cnt_1ms[14].CLK
clk => cnt_1ms[15].CLK
rst => sel[0]~reg0.ACLR
rst => sel[1]~reg0.ACLR
rst => sel[2]~reg0.ACLR
rst => sel[3]~reg0.ACLR
rst => sel[4]~reg0.ACLR
rst => sel[5]~reg0.ACLR
rst => sel[6]~reg0.ACLR
rst => sel[7]~reg0.ACLR
rst => seg[0]~reg0.ACLR
rst => seg[1]~reg0.ACLR
rst => seg[2]~reg0.ACLR
rst => seg[3]~reg0.ACLR
rst => seg[4]~reg0.ACLR
rst => seg[5]~reg0.ACLR
rst => seg[6]~reg0.ACLR
rst => seg[7]~reg0.ACLR
rst => cnt_1ms[0].ACLR
rst => cnt_1ms[1].ACLR
rst => cnt_1ms[2].ACLR
rst => cnt_1ms[3].ACLR
rst => cnt_1ms[4].ACLR
rst => cnt_1ms[5].ACLR
rst => cnt_1ms[6].ACLR
rst => cnt_1ms[7].ACLR
rst => cnt_1ms[8].ACLR
rst => cnt_1ms[9].ACLR
rst => cnt_1ms[10].ACLR
rst => cnt_1ms[11].ACLR
rst => cnt_1ms[12].ACLR
rst => cnt_1ms[13].ACLR
rst => cnt_1ms[14].ACLR
rst => cnt_1ms[15].ACLR
rst => signal_1ms.ACLR
rst => cnt_bit[0].ACLR
rst => cnt_bit[1].ACLR
rst => cnt_bit[2].ACLR
rst => sel_disp[0].ACLR
rst => sel_disp[1].ACLR
rst => sel_disp[2].ACLR
rst => sel_disp[3].ACLR
rst => sel_disp[4].ACLR
rst => sel_disp[5].ACLR
rst => sel_disp[6].ACLR
rst => sel_disp[7].ACLR
rst => seg_disp[0].ACLR
rst => seg_disp[1].ACLR
rst => seg_disp[2].ACLR
rst => seg_disp[3].ACLR
bit_7[0] => Mux3.IN0
bit_7[1] => Mux2.IN0
bit_7[2] => Mux1.IN0
bit_7[3] => Mux0.IN0
bit_6[0] => Mux3.IN1
bit_6[1] => Mux2.IN1
bit_6[2] => Mux1.IN1
bit_6[3] => Mux0.IN1
bit_5[0] => Mux3.IN2
bit_5[1] => Mux2.IN2
bit_5[2] => Mux1.IN2
bit_5[3] => Mux0.IN2
bit_4[0] => Mux3.IN3
bit_4[1] => Mux2.IN3
bit_4[2] => Mux1.IN3
bit_4[3] => Mux0.IN3
bit_3[0] => Mux3.IN4
bit_3[1] => Mux2.IN4
bit_3[2] => Mux1.IN4
bit_3[3] => Mux0.IN4
bit_2[0] => Mux3.IN5
bit_2[1] => Mux2.IN5
bit_2[2] => Mux1.IN5
bit_2[3] => Mux0.IN5
bit_1[0] => Mux3.IN6
bit_1[1] => Mux2.IN6
bit_1[2] => Mux1.IN6
bit_1[3] => Mux0.IN6
bit_0[0] => Mux3.IN7
bit_0[1] => Mux2.IN7
bit_0[2] => Mux1.IN7
bit_0[3] => Mux0.IN7
sel[0] <= sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[3] <= sel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[4] <= sel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[5] <= sel[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[6] <= sel[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[7] <= sel[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


