|addr_traverse
sclk => sclk.IN2
nrst => nrst.IN1
key => key.IN1
led[0] <= rom_8x16:rom_8x16_inst.q
led[1] <= rom_8x16:rom_8x16_inst.q
led[2] <= rom_8x16:rom_8x16_inst.q
led[3] <= rom_8x16:rom_8x16_inst.q
led[4] <= rom_8x16:rom_8x16_inst.q
led[5] <= rom_8x16:rom_8x16_inst.q
led[6] <= rom_8x16:rom_8x16_inst.q
led[7] <= rom_8x16:rom_8x16_inst.q


|addr_traverse|key:key_inst
sclk => key_out~reg0.CLK
sclk => cnt_signal_interval[0].CLK
sclk => cnt_signal_interval[1].CLK
sclk => cnt_signal_interval[2].CLK
sclk => cnt_signal_interval[3].CLK
sclk => cnt_signal_interval[4].CLK
sclk => cnt_signal_interval[5].CLK
sclk => cnt_signal_interval[6].CLK
sclk => cnt_signal_interval[7].CLK
sclk => cnt_signal_interval[8].CLK
sclk => cnt_signal_interval[9].CLK
sclk => cnt_signal_interval[10].CLK
sclk => cnt_signal_interval[11].CLK
sclk => cnt_signal_interval[12].CLK
sclk => cnt_signal_interval[13].CLK
sclk => cnt_signal_interval[14].CLK
sclk => cnt_signal_interval[15].CLK
sclk => long_press_ok.CLK
sclk => cnt_long_press[0].CLK
sclk => cnt_long_press[1].CLK
sclk => cnt_long_press[2].CLK
sclk => cnt_long_press[3].CLK
sclk => cnt_long_press[4].CLK
sclk => cnt_long_press[5].CLK
sclk => cnt_long_press[6].CLK
sclk => cnt_long_press[7].CLK
sclk => cnt_long_press[8].CLK
sclk => cnt_long_press[9].CLK
sclk => cnt_long_press[10].CLK
sclk => cnt_long_press[11].CLK
sclk => cnt_long_press[12].CLK
sclk => cnt_long_press[13].CLK
sclk => cnt_long_press[14].CLK
sclk => cnt_long_press[15].CLK
sclk => cnt_long_press_enable.CLK
sclk => cnt_20ms[0].CLK
sclk => cnt_20ms[1].CLK
sclk => cnt_20ms[2].CLK
sclk => cnt_20ms[3].CLK
sclk => cnt_20ms[4].CLK
sclk => cnt_20ms[5].CLK
sclk => cnt_20ms[6].CLK
sclk => cnt_20ms[7].CLK
sclk => cnt_20ms[8].CLK
sclk => cnt_20ms[9].CLK
sclk => cnt_20ms[10].CLK
sclk => cnt_20ms[11].CLK
sclk => cnt_20ms[12].CLK
sclk => cnt_20ms[13].CLK
sclk => cnt_20ms[14].CLK
sclk => cnt_20ms[15].CLK
sclk => signal_1ms.CLK
sclk => cnt_1ms[0].CLK
sclk => cnt_1ms[1].CLK
sclk => cnt_1ms[2].CLK
sclk => cnt_1ms[3].CLK
sclk => cnt_1ms[4].CLK
sclk => cnt_1ms[5].CLK
sclk => cnt_1ms[6].CLK
sclk => cnt_1ms[7].CLK
sclk => cnt_1ms[8].CLK
sclk => cnt_1ms[9].CLK
sclk => cnt_1ms[10].CLK
sclk => cnt_1ms[11].CLK
sclk => cnt_1ms[12].CLK
sclk => cnt_1ms[13].CLK
sclk => cnt_1ms[14].CLK
sclk => cnt_1ms[15].CLK
nrst => cnt_1ms[0].ACLR
nrst => cnt_1ms[1].ACLR
nrst => cnt_1ms[2].ACLR
nrst => cnt_1ms[3].ACLR
nrst => cnt_1ms[4].ACLR
nrst => cnt_1ms[5].ACLR
nrst => cnt_1ms[6].ACLR
nrst => cnt_1ms[7].ACLR
nrst => cnt_1ms[8].ACLR
nrst => cnt_1ms[9].ACLR
nrst => cnt_1ms[10].ACLR
nrst => cnt_1ms[11].ACLR
nrst => cnt_1ms[12].ACLR
nrst => cnt_1ms[13].ACLR
nrst => cnt_1ms[14].ACLR
nrst => cnt_1ms[15].ACLR
nrst => key_out~reg0.ACLR
nrst => signal_1ms.ACLR
nrst => cnt_20ms[0].ACLR
nrst => cnt_20ms[1].ACLR
nrst => cnt_20ms[2].ACLR
nrst => cnt_20ms[3].ACLR
nrst => cnt_20ms[4].ACLR
nrst => cnt_20ms[5].ACLR
nrst => cnt_20ms[6].ACLR
nrst => cnt_20ms[7].ACLR
nrst => cnt_20ms[8].ACLR
nrst => cnt_20ms[9].ACLR
nrst => cnt_20ms[10].ACLR
nrst => cnt_20ms[11].ACLR
nrst => cnt_20ms[12].ACLR
nrst => cnt_20ms[13].ACLR
nrst => cnt_20ms[14].ACLR
nrst => cnt_20ms[15].ACLR
nrst => cnt_long_press_enable.ACLR
nrst => cnt_long_press[0].ACLR
nrst => cnt_long_press[1].ACLR
nrst => cnt_long_press[2].ACLR
nrst => cnt_long_press[3].ACLR
nrst => cnt_long_press[4].ACLR
nrst => cnt_long_press[5].ACLR
nrst => cnt_long_press[6].ACLR
nrst => cnt_long_press[7].ACLR
nrst => cnt_long_press[8].ACLR
nrst => cnt_long_press[9].ACLR
nrst => cnt_long_press[10].ACLR
nrst => cnt_long_press[11].ACLR
nrst => cnt_long_press[12].ACLR
nrst => cnt_long_press[13].ACLR
nrst => cnt_long_press[14].ACLR
nrst => cnt_long_press[15].ACLR
nrst => long_press_ok.ACLR
nrst => cnt_signal_interval[0].ACLR
nrst => cnt_signal_interval[1].ACLR
nrst => cnt_signal_interval[2].ACLR
nrst => cnt_signal_interval[3].ACLR
nrst => cnt_signal_interval[4].ACLR
nrst => cnt_signal_interval[5].ACLR
nrst => cnt_signal_interval[6].ACLR
nrst => cnt_signal_interval[7].ACLR
nrst => cnt_signal_interval[8].ACLR
nrst => cnt_signal_interval[9].ACLR
nrst => cnt_signal_interval[10].ACLR
nrst => cnt_signal_interval[11].ACLR
nrst => cnt_signal_interval[12].ACLR
nrst => cnt_signal_interval[13].ACLR
nrst => cnt_signal_interval[14].ACLR
nrst => cnt_signal_interval[15].ACLR
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => cnt_1ms.OUTPUTSELECT
key_in => signal_1ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_20ms.OUTPUTSELECT
key_in => cnt_long_press_enable.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => cnt_long_press.OUTPUTSELECT
key_in => long_press_ok.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => cnt_signal_interval.OUTPUTSELECT
key_in => key_out.OUTPUTSELECT
key_out <= key_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|addr_traverse|rom_8x16:rom_8x16_inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|addr_traverse|rom_8x16:rom_8x16_inst|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_nv91:auto_generated.address_a[0]
address_a[1] => altsyncram_nv91:auto_generated.address_a[1]
address_a[2] => altsyncram_nv91:auto_generated.address_a[2]
address_a[3] => altsyncram_nv91:auto_generated.address_a[3]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_nv91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_nv91:auto_generated.q_a[0]
q_a[1] <= altsyncram_nv91:auto_generated.q_a[1]
q_a[2] <= altsyncram_nv91:auto_generated.q_a[2]
q_a[3] <= altsyncram_nv91:auto_generated.q_a[3]
q_a[4] <= altsyncram_nv91:auto_generated.q_a[4]
q_a[5] <= altsyncram_nv91:auto_generated.q_a[5]
q_a[6] <= altsyncram_nv91:auto_generated.q_a[6]
q_a[7] <= altsyncram_nv91:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|addr_traverse|rom_8x16:rom_8x16_inst|altsyncram:altsyncram_component|altsyncram_nv91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


