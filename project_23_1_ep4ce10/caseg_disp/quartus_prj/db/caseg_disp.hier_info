|top_mod
sclk => sclk.IN4
nrst => nrst.IN4
ds <= caseg_to_hc595:caseg_to_hc595_inst.ds
shcp <= caseg_to_hc595:caseg_to_hc595_inst.shcp
stcp <= caseg_to_hc595:caseg_to_hc595_inst.stcp
oe <= caseg_to_hc595:caseg_to_hc595_inst.oe


|top_mod|time_cnt:time_cnt_inst
sclk => hour[0]~reg0.CLK
sclk => hour[1]~reg0.CLK
sclk => hour[2]~reg0.CLK
sclk => hour[3]~reg0.CLK
sclk => hour[4]~reg0.CLK
sclk => hour[5]~reg0.CLK
sclk => minute[0]~reg0.CLK
sclk => minute[1]~reg0.CLK
sclk => minute[2]~reg0.CLK
sclk => minute[3]~reg0.CLK
sclk => minute[4]~reg0.CLK
sclk => minute[5]~reg0.CLK
sclk => second[0]~reg0.CLK
sclk => second[1]~reg0.CLK
sclk => second[2]~reg0.CLK
sclk => second[3]~reg0.CLK
sclk => second[4]~reg0.CLK
sclk => second[5]~reg0.CLK
sclk => cnt_1s[0].CLK
sclk => cnt_1s[1].CLK
sclk => cnt_1s[2].CLK
sclk => cnt_1s[3].CLK
sclk => cnt_1s[4].CLK
sclk => cnt_1s[5].CLK
sclk => cnt_1s[6].CLK
sclk => cnt_1s[7].CLK
sclk => cnt_1s[8].CLK
sclk => cnt_1s[9].CLK
sclk => cnt_1s[10].CLK
sclk => cnt_1s[11].CLK
sclk => cnt_1s[12].CLK
sclk => cnt_1s[13].CLK
sclk => cnt_1s[14].CLK
sclk => cnt_1s[15].CLK
sclk => cnt_1s[16].CLK
sclk => cnt_1s[17].CLK
sclk => cnt_1s[18].CLK
sclk => cnt_1s[19].CLK
sclk => cnt_1s[20].CLK
sclk => cnt_1s[21].CLK
sclk => cnt_1s[22].CLK
sclk => cnt_1s[23].CLK
sclk => cnt_1s[24].CLK
sclk => cnt_1s[25].CLK
nrst => cnt_1s[0].ACLR
nrst => cnt_1s[1].ACLR
nrst => cnt_1s[2].ACLR
nrst => cnt_1s[3].ACLR
nrst => cnt_1s[4].ACLR
nrst => cnt_1s[5].ACLR
nrst => cnt_1s[6].ACLR
nrst => cnt_1s[7].ACLR
nrst => cnt_1s[8].ACLR
nrst => cnt_1s[9].ACLR
nrst => cnt_1s[10].ACLR
nrst => cnt_1s[11].ACLR
nrst => cnt_1s[12].ACLR
nrst => cnt_1s[13].ACLR
nrst => cnt_1s[14].ACLR
nrst => cnt_1s[15].ACLR
nrst => cnt_1s[16].ACLR
nrst => cnt_1s[17].ACLR
nrst => cnt_1s[18].ACLR
nrst => cnt_1s[19].ACLR
nrst => cnt_1s[20].ACLR
nrst => cnt_1s[21].ACLR
nrst => cnt_1s[22].ACLR
nrst => cnt_1s[23].ACLR
nrst => cnt_1s[24].ACLR
nrst => cnt_1s[25].ACLR
nrst => hour[0]~reg0.ACLR
nrst => hour[1]~reg0.ACLR
nrst => hour[2]~reg0.ACLR
nrst => hour[3]~reg0.ACLR
nrst => hour[4]~reg0.ACLR
nrst => hour[5]~reg0.ACLR
nrst => minute[0]~reg0.ACLR
nrst => minute[1]~reg0.ACLR
nrst => minute[2]~reg0.ACLR
nrst => minute[3]~reg0.ACLR
nrst => minute[4]~reg0.ACLR
nrst => minute[5]~reg0.ACLR
nrst => second[0]~reg0.ACLR
nrst => second[1]~reg0.ACLR
nrst => second[2]~reg0.ACLR
nrst => second[3]~reg0.ACLR
nrst => second[4]~reg0.ACLR
nrst => second[5]~reg0.ACLR
hour[0] <= hour[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[1] <= hour[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[2] <= hour[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[3] <= hour[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[4] <= hour[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hour[5] <= hour[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[0] <= minute[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[1] <= minute[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[2] <= minute[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[3] <= minute[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[4] <= minute[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
minute[5] <= minute[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[0] <= second[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[1] <= second[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[2] <= second[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[3] <= second[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[4] <= second[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
second[5] <= second[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_mod|num_to_bit:num_to_bit_inst
sclk => bit_0[0]~reg0.CLK
sclk => bit_0[1]~reg0.CLK
sclk => bit_0[2]~reg0.CLK
sclk => bit_0[3]~reg0.CLK
sclk => bit_1[0]~reg0.CLK
sclk => bit_1[1]~reg0.CLK
sclk => bit_1[2]~reg0.CLK
sclk => bit_1[3]~reg0.CLK
sclk => bit_2[0]~reg0.CLK
sclk => bit_2[1]~reg0.CLK
sclk => bit_2[2]~reg0.CLK
sclk => bit_2[3]~reg0.CLK
sclk => bit_3[0]~reg0.CLK
sclk => bit_3[1]~reg0.CLK
sclk => bit_3[2]~reg0.CLK
sclk => bit_3[3]~reg0.CLK
sclk => bit_4[0]~reg0.CLK
sclk => bit_4[1]~reg0.CLK
sclk => bit_4[2]~reg0.CLK
sclk => bit_4[3]~reg0.CLK
sclk => bit_5[0]~reg0.CLK
sclk => bit_5[1]~reg0.CLK
sclk => bit_5[2]~reg0.CLK
sclk => bit_5[3]~reg0.CLK
sclk => bit_6[0]~reg0.CLK
sclk => bit_6[1]~reg0.CLK
sclk => bit_6[2]~reg0.CLK
sclk => bit_6[3]~reg0.CLK
sclk => bit_7[0]~reg0.CLK
sclk => bit_7[1]~reg0.CLK
sclk => bit_7[2]~reg0.CLK
sclk => bit_7[3]~reg0.CLK
sclk => num_00_shift[0].CLK
sclk => num_00_shift[1].CLK
sclk => num_00_shift[2].CLK
sclk => num_00_shift[3].CLK
sclk => num_00_shift[4].CLK
sclk => num_00_shift[5].CLK
sclk => num_00_shift[6].CLK
sclk => num_00_shift[7].CLK
sclk => num_00_shift[8].CLK
sclk => num_00_shift[9].CLK
sclk => num_00_shift[10].CLK
sclk => num_00_shift[11].CLK
sclk => num_00_shift[12].CLK
sclk => num_00_shift[13].CLK
sclk => num_01_shift[0].CLK
sclk => num_01_shift[1].CLK
sclk => num_01_shift[2].CLK
sclk => num_01_shift[3].CLK
sclk => num_01_shift[4].CLK
sclk => num_01_shift[5].CLK
sclk => num_01_shift[6].CLK
sclk => num_01_shift[7].CLK
sclk => num_01_shift[8].CLK
sclk => num_01_shift[9].CLK
sclk => num_01_shift[10].CLK
sclk => num_01_shift[11].CLK
sclk => num_01_shift[12].CLK
sclk => num_01_shift[13].CLK
sclk => num_02_shift[0].CLK
sclk => num_02_shift[1].CLK
sclk => num_02_shift[2].CLK
sclk => num_02_shift[3].CLK
sclk => num_02_shift[4].CLK
sclk => num_02_shift[5].CLK
sclk => num_02_shift[6].CLK
sclk => num_02_shift[7].CLK
sclk => num_02_shift[8].CLK
sclk => num_02_shift[9].CLK
sclk => num_02_shift[10].CLK
sclk => num_02_shift[11].CLK
sclk => num_02_shift[12].CLK
sclk => num_02_shift[13].CLK
sclk => cnt_shift[0].CLK
sclk => cnt_shift[1].CLK
sclk => cnt_shift[2].CLK
sclk => shift_signal.CLK
nrst => bit_0[0]~reg0.ACLR
nrst => bit_0[1]~reg0.PRESET
nrst => bit_0[2]~reg0.ACLR
nrst => bit_0[3]~reg0.PRESET
nrst => bit_1[0]~reg0.ACLR
nrst => bit_1[1]~reg0.PRESET
nrst => bit_1[2]~reg0.ACLR
nrst => bit_1[3]~reg0.PRESET
nrst => bit_2[0]~reg0.ACLR
nrst => bit_2[1]~reg0.PRESET
nrst => bit_2[2]~reg0.ACLR
nrst => bit_2[3]~reg0.PRESET
nrst => bit_3[0]~reg0.ACLR
nrst => bit_3[1]~reg0.PRESET
nrst => bit_3[2]~reg0.ACLR
nrst => bit_3[3]~reg0.PRESET
nrst => bit_4[0]~reg0.ACLR
nrst => bit_4[1]~reg0.PRESET
nrst => bit_4[2]~reg0.ACLR
nrst => bit_4[3]~reg0.PRESET
nrst => bit_5[0]~reg0.ACLR
nrst => bit_5[1]~reg0.PRESET
nrst => bit_5[2]~reg0.ACLR
nrst => bit_5[3]~reg0.PRESET
nrst => bit_6[0]~reg0.ACLR
nrst => bit_6[1]~reg0.PRESET
nrst => bit_6[2]~reg0.ACLR
nrst => bit_6[3]~reg0.PRESET
nrst => bit_7[0]~reg0.ACLR
nrst => bit_7[1]~reg0.PRESET
nrst => bit_7[2]~reg0.ACLR
nrst => bit_7[3]~reg0.PRESET
nrst => shift_signal.ACLR
nrst => cnt_shift[0].ACLR
nrst => cnt_shift[1].ACLR
nrst => cnt_shift[2].ACLR
nrst => num_02_shift[0].ACLR
nrst => num_02_shift[1].ACLR
nrst => num_02_shift[2].ACLR
nrst => num_02_shift[3].ACLR
nrst => num_02_shift[4].ACLR
nrst => num_02_shift[5].ACLR
nrst => num_02_shift[6].ACLR
nrst => num_02_shift[7].ACLR
nrst => num_02_shift[8].ACLR
nrst => num_02_shift[9].ACLR
nrst => num_02_shift[10].ACLR
nrst => num_02_shift[11].ACLR
nrst => num_02_shift[12].ACLR
nrst => num_02_shift[13].ACLR
nrst => num_01_shift[0].ACLR
nrst => num_01_shift[1].ACLR
nrst => num_01_shift[2].ACLR
nrst => num_01_shift[3].ACLR
nrst => num_01_shift[4].ACLR
nrst => num_01_shift[5].ACLR
nrst => num_01_shift[6].ACLR
nrst => num_01_shift[7].ACLR
nrst => num_01_shift[8].ACLR
nrst => num_01_shift[9].ACLR
nrst => num_01_shift[10].ACLR
nrst => num_01_shift[11].ACLR
nrst => num_01_shift[12].ACLR
nrst => num_01_shift[13].ACLR
nrst => num_00_shift[0].ACLR
nrst => num_00_shift[1].ACLR
nrst => num_00_shift[2].ACLR
nrst => num_00_shift[3].ACLR
nrst => num_00_shift[4].ACLR
nrst => num_00_shift[5].ACLR
nrst => num_00_shift[6].ACLR
nrst => num_00_shift[7].ACLR
nrst => num_00_shift[8].ACLR
nrst => num_00_shift[9].ACLR
nrst => num_00_shift[10].ACLR
nrst => num_00_shift[11].ACLR
nrst => num_00_shift[12].ACLR
nrst => num_00_shift[13].ACLR
num_02[0] => num_02_shift.DATAB
num_02[1] => num_02_shift.DATAB
num_02[2] => num_02_shift.DATAB
num_02[3] => num_02_shift.DATAB
num_02[4] => num_02_shift.DATAB
num_02[5] => num_02_shift.DATAB
num_01[0] => num_01_shift.DATAB
num_01[1] => num_01_shift.DATAB
num_01[2] => num_01_shift.DATAB
num_01[3] => num_01_shift.DATAB
num_01[4] => num_01_shift.DATAB
num_01[5] => num_01_shift.DATAB
num_00[0] => num_00_shift.DATAB
num_00[1] => num_00_shift.DATAB
num_00[2] => num_00_shift.DATAB
num_00[3] => num_00_shift.DATAB
num_00[4] => num_00_shift.DATAB
num_00[5] => num_00_shift.DATAB
bit_7[0] <= bit_7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_7[1] <= bit_7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_7[2] <= bit_7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_7[3] <= bit_7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[0] <= bit_6[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[1] <= bit_6[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[2] <= bit_6[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_6[3] <= bit_6[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[0] <= bit_5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[1] <= bit_5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[2] <= bit_5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_5[3] <= bit_5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[0] <= bit_4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[1] <= bit_4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[2] <= bit_4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_4[3] <= bit_4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[0] <= bit_3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[1] <= bit_3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[2] <= bit_3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_3[3] <= bit_3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[0] <= bit_2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[1] <= bit_2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[2] <= bit_2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_2[3] <= bit_2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[0] <= bit_1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[1] <= bit_1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[2] <= bit_1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_1[3] <= bit_1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[0] <= bit_0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[1] <= bit_0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[2] <= bit_0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_0[3] <= bit_0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_mod|bit_to_caseg:bit_to_caseg_inst
sclk => seg[0]~reg0.CLK
sclk => seg[1]~reg0.CLK
sclk => seg[2]~reg0.CLK
sclk => seg[3]~reg0.CLK
sclk => seg[4]~reg0.CLK
sclk => seg[5]~reg0.CLK
sclk => seg[6]~reg0.CLK
sclk => seg[7]~reg0.CLK
sclk => sel[0]~reg0.CLK
sclk => sel[1]~reg0.CLK
sclk => sel[2]~reg0.CLK
sclk => sel[3]~reg0.CLK
sclk => sel[4]~reg0.CLK
sclk => sel[5]~reg0.CLK
sclk => sel[6]~reg0.CLK
sclk => sel[7]~reg0.CLK
sclk => seg_disp[0].CLK
sclk => seg_disp[1].CLK
sclk => seg_disp[2].CLK
sclk => seg_disp[3].CLK
sclk => sel_disp[0].CLK
sclk => sel_disp[1].CLK
sclk => sel_disp[2].CLK
sclk => sel_disp[3].CLK
sclk => sel_disp[4].CLK
sclk => sel_disp[5].CLK
sclk => sel_disp[6].CLK
sclk => sel_disp[7].CLK
sclk => cnt_bit[0].CLK
sclk => cnt_bit[1].CLK
sclk => cnt_bit[2].CLK
sclk => signal_1ms.CLK
sclk => cnt_1ms[0].CLK
sclk => cnt_1ms[1].CLK
sclk => cnt_1ms[2].CLK
sclk => cnt_1ms[3].CLK
sclk => cnt_1ms[4].CLK
sclk => cnt_1ms[5].CLK
sclk => cnt_1ms[6].CLK
sclk => cnt_1ms[7].CLK
sclk => cnt_1ms[8].CLK
sclk => cnt_1ms[9].CLK
sclk => cnt_1ms[10].CLK
sclk => cnt_1ms[11].CLK
sclk => cnt_1ms[12].CLK
sclk => cnt_1ms[13].CLK
sclk => cnt_1ms[14].CLK
sclk => cnt_1ms[15].CLK
nrst => sel[0]~reg0.ACLR
nrst => sel[1]~reg0.ACLR
nrst => sel[2]~reg0.ACLR
nrst => sel[3]~reg0.ACLR
nrst => sel[4]~reg0.ACLR
nrst => sel[5]~reg0.ACLR
nrst => sel[6]~reg0.ACLR
nrst => sel[7]~reg0.ACLR
nrst => seg[0]~reg0.ACLR
nrst => seg[1]~reg0.ACLR
nrst => seg[2]~reg0.ACLR
nrst => seg[3]~reg0.ACLR
nrst => seg[4]~reg0.ACLR
nrst => seg[5]~reg0.ACLR
nrst => seg[6]~reg0.ACLR
nrst => seg[7]~reg0.ACLR
nrst => cnt_1ms[0].ACLR
nrst => cnt_1ms[1].ACLR
nrst => cnt_1ms[2].ACLR
nrst => cnt_1ms[3].ACLR
nrst => cnt_1ms[4].ACLR
nrst => cnt_1ms[5].ACLR
nrst => cnt_1ms[6].ACLR
nrst => cnt_1ms[7].ACLR
nrst => cnt_1ms[8].ACLR
nrst => cnt_1ms[9].ACLR
nrst => cnt_1ms[10].ACLR
nrst => cnt_1ms[11].ACLR
nrst => cnt_1ms[12].ACLR
nrst => cnt_1ms[13].ACLR
nrst => cnt_1ms[14].ACLR
nrst => cnt_1ms[15].ACLR
nrst => signal_1ms.ACLR
nrst => cnt_bit[0].ACLR
nrst => cnt_bit[1].ACLR
nrst => cnt_bit[2].ACLR
nrst => sel_disp[0].ACLR
nrst => sel_disp[1].ACLR
nrst => sel_disp[2].ACLR
nrst => sel_disp[3].ACLR
nrst => sel_disp[4].ACLR
nrst => sel_disp[5].ACLR
nrst => sel_disp[6].ACLR
nrst => sel_disp[7].ACLR
nrst => seg_disp[0].ACLR
nrst => seg_disp[1].ACLR
nrst => seg_disp[2].ACLR
nrst => seg_disp[3].ACLR
bit_7[0] => Mux3.IN0
bit_7[1] => Mux2.IN0
bit_7[2] => Mux1.IN0
bit_7[3] => Mux0.IN0
bit_6[0] => Mux3.IN1
bit_6[1] => Mux2.IN1
bit_6[2] => Mux1.IN1
bit_6[3] => Mux0.IN1
bit_5[0] => Mux3.IN2
bit_5[1] => Mux2.IN2
bit_5[2] => Mux1.IN2
bit_5[3] => Mux0.IN2
bit_4[0] => Mux3.IN3
bit_4[1] => Mux2.IN3
bit_4[2] => Mux1.IN3
bit_4[3] => Mux0.IN3
bit_3[0] => Mux3.IN4
bit_3[1] => Mux2.IN4
bit_3[2] => Mux1.IN4
bit_3[3] => Mux0.IN4
bit_2[0] => Mux3.IN5
bit_2[1] => Mux2.IN5
bit_2[2] => Mux1.IN5
bit_2[3] => Mux0.IN5
bit_1[0] => Mux3.IN6
bit_1[1] => Mux2.IN6
bit_1[2] => Mux1.IN6
bit_1[3] => Mux0.IN6
bit_0[0] => Mux3.IN7
bit_0[1] => Mux2.IN7
bit_0[2] => Mux1.IN7
bit_0[3] => Mux0.IN7
sel[0] <= sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[3] <= sel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[4] <= sel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[5] <= sel[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[6] <= sel[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[7] <= sel[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_mod|caseg_to_hc595:caseg_to_hc595_inst
sclk => stcp~reg0.CLK
sclk => shcp~reg0.CLK
sclk => ds~reg0.CLK
sclk => bit[0].CLK
sclk => bit[1].CLK
sclk => bit[2].CLK
sclk => bit[3].CLK
sclk => cnt[0].CLK
sclk => cnt[1].CLK
nrst => ds~reg0.ACLR
nrst => shcp~reg0.ACLR
nrst => stcp~reg0.ACLR
nrst => cnt[0].ACLR
nrst => cnt[1].ACLR
nrst => bit[0].ACLR
nrst => bit[1].ACLR
nrst => bit[2].ACLR
nrst => bit[3].ACLR
sel[0] => Mux0.IN8
sel[1] => Mux0.IN9
sel[2] => Mux0.IN10
sel[3] => Mux0.IN11
sel[4] => Mux0.IN12
sel[5] => Mux0.IN13
sel[6] => Mux0.IN14
sel[7] => Mux0.IN15
seg[0] => Mux0.IN0
seg[1] => Mux0.IN1
seg[2] => Mux0.IN2
seg[3] => Mux0.IN3
seg[4] => Mux0.IN4
seg[5] => Mux0.IN5
seg[6] => Mux0.IN6
seg[7] => Mux0.IN7
ds <= ds~reg0.DB_MAX_OUTPUT_PORT_TYPE
shcp <= shcp~reg0.DB_MAX_OUTPUT_PORT_TYPE
stcp <= stcp~reg0.DB_MAX_OUTPUT_PORT_TYPE
oe <= <GND>


